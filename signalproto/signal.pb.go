// Code generated by protoc-gen-go. DO NOT EDIT.
// source: signal.proto

/*
Package signalproto is a generated protocol buffer package.

It is generated from these files:
	signal.proto

It has these top-level messages:
	SignalData
	Signal
*/
package signalproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SignalData struct {
	TraceNumber          int32 `protobuf:"varint,1,opt,name=trace_number,json=traceNumber" json:"trace_number,omitempty"`
	TimeStampSeconds     int32 `protobuf:"varint,2,opt,name=time_stamp_seconds,json=timeStampSeconds" json:"time_stamp_seconds,omitempty"`
	TimeStampNanoseconds int32 `protobuf:"varint,3,opt,name=time_stamp_nanoseconds,json=timeStampNanoseconds" json:"time_stamp_nanoseconds,omitempty"`
}

func (m *SignalData) Reset()                    { *m = SignalData{} }
func (m *SignalData) String() string            { return proto.CompactTextString(m) }
func (*SignalData) ProtoMessage()               {}
func (*SignalData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SignalData) GetTraceNumber() int32 {
	if m != nil {
		return m.TraceNumber
	}
	return 0
}

func (m *SignalData) GetTimeStampSeconds() int32 {
	if m != nil {
		return m.TimeStampSeconds
	}
	return 0
}

func (m *SignalData) GetTimeStampNanoseconds() int32 {
	if m != nil {
		return m.TimeStampNanoseconds
	}
	return 0
}

type Signal struct {
	SamplePoints       int32         `protobuf:"varint,1,opt,name=sample_points,json=samplePoints" json:"sample_points,omitempty"`
	SamplingIntervalPs int32         `protobuf:"varint,2,opt,name=sampling_interval_ps,json=samplingIntervalPs" json:"sampling_interval_ps,omitempty"`
	Frequency_MHz      int32         `protobuf:"varint,3,opt,name=frequency_MHz,json=frequencyMHz" json:"frequency_MHz,omitempty"`
	Signals            []*SignalData `protobuf:"bytes,4,rep,name=signals" json:"signals,omitempty"`
}

func (m *Signal) Reset()                    { *m = Signal{} }
func (m *Signal) String() string            { return proto.CompactTextString(m) }
func (*Signal) ProtoMessage()               {}
func (*Signal) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Signal) GetSamplePoints() int32 {
	if m != nil {
		return m.SamplePoints
	}
	return 0
}

func (m *Signal) GetSamplingIntervalPs() int32 {
	if m != nil {
		return m.SamplingIntervalPs
	}
	return 0
}

func (m *Signal) GetFrequency_MHz() int32 {
	if m != nil {
		return m.Frequency_MHz
	}
	return 0
}

func (m *Signal) GetSignals() []*SignalData {
	if m != nil {
		return m.Signals
	}
	return nil
}

func init() {
	proto.RegisterType((*SignalData)(nil), "signal_proto.SignalData")
	proto.RegisterType((*Signal)(nil), "signal_proto.Signal")
}

func init() { proto.RegisterFile("signal.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x89, 0xd5, 0x0a, 0xd3, 0x08, 0x32, 0x14, 0xc9, 0xb1, 0xd6, 0x4b, 0x0f, 0x12, 0xa4,
	0xfa, 0x08, 0x1e, 0xea, 0xa1, 0xa5, 0x34, 0x0f, 0xb0, 0x6c, 0xe3, 0x5a, 0x16, 0x9a, 0xd9, 0xb8,
	0xb3, 0x15, 0xec, 0x6b, 0xf8, 0x32, 0x3e, 0x5e, 0xc9, 0x24, 0xdb, 0xe6, 0x38, 0xdf, 0x37, 0xb3,
	0xfc, 0xfb, 0x43, 0xca, 0x76, 0x47, 0x7a, 0x9f, 0xd7, 0xde, 0x05, 0x87, 0xdd, 0xa4, 0x64, 0x9a,
	0xfe, 0x25, 0x00, 0x85, 0x80, 0x77, 0x1d, 0x34, 0x3e, 0x42, 0x1a, 0xbc, 0x2e, 0x8d, 0xa2, 0x43,
	0xb5, 0x35, 0x3e, 0x4b, 0x26, 0xc9, 0xec, 0x66, 0x33, 0x12, 0xb6, 0x12, 0x84, 0xcf, 0x80, 0xc1,
	0x56, 0x46, 0x71, 0xd0, 0x55, 0xad, 0xd8, 0x94, 0x8e, 0x3e, 0x39, 0xbb, 0x92, 0xc5, 0xfb, 0xc6,
	0x14, 0x8d, 0x28, 0x5a, 0x8e, 0x6f, 0xf0, 0xd0, 0xdb, 0x26, 0x4d, 0x2e, 0x5e, 0x0c, 0xe4, 0x62,
	0x7c, 0xbe, 0x58, 0x5d, 0xdc, 0xf4, 0x3f, 0x81, 0x61, 0x9b, 0x0a, 0x9f, 0xe0, 0x8e, 0x75, 0x55,
	0xef, 0x8d, 0xaa, 0x9d, 0xa5, 0xc0, 0x5d, 0xa4, 0xb4, 0x85, 0x6b, 0x61, 0xf8, 0x02, 0x63, 0x99,
	0x2d, 0xed, 0x94, 0xa5, 0x60, 0xfc, 0x4f, 0xf3, 0xc1, 0x98, 0x0a, 0xa3, 0xfb, 0xe8, 0xd4, 0x9a,
	0x9b, 0x67, 0xbf, 0xbc, 0xf9, 0x3e, 0x18, 0x2a, 0x7f, 0xd5, 0x72, 0x71, 0xec, 0xe2, 0xa4, 0x67,
	0xb8, 0x5c, 0x1c, 0x71, 0x0e, 0xb7, 0x6d, 0x59, 0x9c, 0x5d, 0x4f, 0x06, 0xb3, 0xd1, 0x3c, 0xcb,
	0xfb, 0xe5, 0xe5, 0x97, 0xe2, 0x36, 0x71, 0x71, 0x3b, 0x14, 0xf5, 0x7a, 0x0a, 0x00, 0x00, 0xff,
	0xff, 0x7a, 0x1d, 0x3d, 0x1f, 0x75, 0x01, 0x00, 0x00,
}
